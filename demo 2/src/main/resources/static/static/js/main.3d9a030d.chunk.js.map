{"version":3,"sources":["client.js","App.js","reportWebVitals.js","index.js"],"names":["checkStatus","response","ok","error","Error","statusText","Promise","reject","Header","Layout","Content","Footer","Sider","SubMenu","Menu","columns","title","dataIndex","key","antIcon","LoadingOutlined","style","fontSize","spin","App","useState","students","setStudents","collapsed","setCollapsed","fetching","setFetching","fetchStudents","fetch","then","res","json","data","console","log","useEffect","minHeight","collapsible","onCollapse","className","theme","defaultSelectedKeys","mode","Item","icon","PieChartOutlined","DesktopOutlined","UserOutlined","TeamOutlined","FileOutlined","padding","margin","indicator","length","dataSource","bordered","pagination","pageSize","scroll","y","rowkey","student","id","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d9a030d.chunk.js","sourcesContent":["import fetch from 'unfetch';\n\nconst checkStatus = response => {\n    if (response.ok) {\n        return response;\n    }\n    //convert non-2xx http response into errors:\n    const error = new Error(response.statusText);\n    error.response = response;\n    return Promise.reject(error);\n\n}\n\nexport const getAllStudents = () =>\n    fetch(\"api/v1/students\")\n    .then(checkStatus);","import { useState, useEffect } from 'react'\nimport { getAllStudents } from \"./client\";\nimport { Layout, Menu, Breadcrumb, Table, Spin, Empty } from 'antd';\nimport {\n    DesktopOutlined,\n    PieChartOutlined,\n    FileOutlined,\n    TeamOutlined,\n    UserOutlined, LoadingOutlined,\n} from '@ant-design/icons';\n\nimport './App.css';\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nconst columns = [\n  {\n    title: 'Id',\n    dataIndex: 'id',\n    key: 'id',\n  },\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: 'Email',\n    dataIndex: 'email',\n    key: 'email',\n  },\n  {\n      title: 'Gender',\n      dataIndex: 'gender',\n      key: 'gender',\n    },\n];\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n\nfunction App() {\n    const [students, setStudents] = useState([]);\n    const [collapsed, setCollapsed] = useState(false);\n    const [fetching, setFetching] = useState(true);\n\n    const fetchStudents = () =>\n        getAllStudents()\n            .then(res => res.json())\n            .then(data => {\n                console.log(data);\n                setStudents(data);\n                setFetching(false);\n            })\n\n    useEffect(() => {\n        console.log(\"component is mounted\");\n        fetchStudents();\n    }, []);\n\n    const renderStudents = () => {\n        if(fetching){\n            return <Spin indicator={antIcon} />\n        }\n\n        if (students.length <= 0){\n            return <Empty />;\n        }\n\n        return <Table\n            dataSource={students}\n            columns={columns}\n            bordered\n            title={() => 'Students'}\n            pagination={{ pageSize: 50 }}\n            scroll={{ y: 240 }}\n            rowkey={(student) => student.id}\n\n\n\n        />;\n    }\n\n\n\n    return <Layout style={{ minHeight: '100vh' }}>\n        <Sider collapsible collapsed={collapsed}\n               onCollapse={setCollapsed}>\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n                <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\n                    Option 1\n                </Menu.Item>\n                <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\n                    Option 2\n                </Menu.Item>\n                <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"User\">\n                    <Menu.Item key=\"3\">Tom</Menu.Item>\n                    <Menu.Item key=\"4\">Bill</Menu.Item>\n                    <Menu.Item key=\"5\">Alex</Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Team\">\n                    <Menu.Item key=\"6\">Team 1</Menu.Item>\n                    <Menu.Item key=\"8\">Team 2</Menu.Item>\n                </SubMenu>\n                <Menu.Item key=\"9\" icon={<FileOutlined />}>\n                    Files\n                </Menu.Item>\n            </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n            <Content style={{ margin: '0 16px' }}>\n                <Breadcrumb style={{ margin: '16px 0' }}>\n                    <Breadcrumb.Item>User</Breadcrumb.Item>\n                    <Breadcrumb.Item>Bill</Breadcrumb.Item>\n                </Breadcrumb>\n                <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n                    {renderStudents()}\n                </div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>2021 Created by Soami </Footer>\n        </Layout>\n    </Layout>\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}